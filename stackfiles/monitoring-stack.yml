version: '3.6'

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - /usr/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    depends_on:
      - cadvisor
    networks:
      - cluster
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == master
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
    labels:
      traefik.enable: "false"

#  node-exporter:
#    image: prom/node-exporter:latest
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /:/rootfs:ro
#    command:
#      - '--path.procfs=/host/proc'
#      - '--path.sysfs=/host/sys'
#      - --collector.filesystem.ignored-mount-points
#      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    ports:
#      - 9100:9100
#    networks:
#      - cluster
#    deploy:
#      mode: global
#      restart_policy:
#        condition: on-failure
#        delay: 5s
#        max_attempts: 5
#        window: 120s

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - cluster
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
    labels:
      traefik.enable: "false"

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - cluster
      - web
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
      placement:
        constraints:
          - node.role == manager
    labels:
      traefik.frontend.rule: 'Host: monitoring.chdesign.me'
      traefik.enable: 'true'
      traefik.network: "docker.local"
      traefik.port: '3000'

networks:
  cluster:
    external: true
  web:
    external: true
